import time
import os
from schedule import Scheduler
from datetime import datetime
from config import ADMIN_CHAT_ID, ALL_USERS_LOG_DIR
from services.convert_stats import get_top_conversions
from services.yandex_webdav_backup import backup_to_yandex_disk, clean_old_backups

def send_hello(bot):
    greeting_path = "data_storage/hello.txt"
    users_csv = "users.csv"

    try:
        with open(greeting_path, "r", encoding="utf-8") as f:
            greeting_text = f.read()
    except Exception as e:
        print(f"[{datetime.now()}] –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")
        return

    try:
        import csv
        with open(users_csv, newline='', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            for row in reader:
                chat_id = row.get("User ID")
                if chat_id:
                    try:
                        bot.send_message(chat_id, greeting_text)
                        print(f"[{datetime.now()}] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {chat_id}")
                    except Exception as e:
                        print(f"[{datetime.now()}] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {chat_id}: {e}")
                time.sleep(0.3)  # –£–º–µ–Ω—å—à–∏–ª –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    except Exception as e:
        print(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV: {e}")

def send_all_logs_to_admin(bot):
    global_log_path = os.path.join(ALL_USERS_LOG_DIR, "all_log.txt")

    if not os.path.exists(global_log_path):
        print(f"[{datetime.now()}] –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {global_log_path}")
        return

    try:
        with open(global_log_path, "rb") as f:
            bot.send_document(
                ADMIN_CHAT_ID, 
                f, 
                caption="üìä –õ–æ–≥–∏ –±–æ—Ç–∞ –∑–∞ –¥–µ–Ω—å",
                disable_notification=True
            )
        print(f"[{datetime.now()}] –û–±—â–∏–π –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω—É")
    except Exception as e:
        print(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞: {e}")
    try:
        with open(global_log_path, "w", encoding="utf-8") as f:
            f.truncate(0)
        print(f"[{datetime.now()}] –û–±—â–∏–π –ª–æ–≥ –æ—á–∏—â–µ–Ω")
    except Exception as e:
        print(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–∞: {e}")

def send_conversion_stats(bot):
    try:
        top_conversions = get_top_conversions(10)
        
        if not top_conversions:
            bot.send_message(ADMIN_CHAT_ID, "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π: –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞ –Ω–µ—Ç")
            return
            
        message = "üìä –¢–æ–ø-10 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π:\n\n"
        for i, conv in enumerate(top_conversions, 1):
            message += (
                f"{i}. {conv['source_format'].upper()} ‚Üí {conv['target_format'].upper()} "
                f"(–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {conv['count']} —Ä–∞–∑)\n"
            )
        
        bot.send_message(ADMIN_CHAT_ID, message, disable_notification=True)
        print(f"[{datetime.now()}] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É")
        
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}"
        print(f"[{datetime.now()}] {error_msg}")
        bot.send_message(ADMIN_CHAT_ID, f"‚ùå {error_msg}")

def start_scheduler(bot):
    scheduler = Scheduler()

    #–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    scheduler.every().day.at("08:00").do(send_hello, bot=bot)
    
    #–õ–æ–≥–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–æ
    scheduler.every().day.at("23:50").do(send_conversion_stats, bot=bot)
    scheduler.every().day.at("23:55").do(send_all_logs_to_admin, bot=bot)
    
    #–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–æ–≤
    scheduler.every(3).hours.do(backup_to_yandex_disk)
   
    #–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ —Ä–∞–∑ –≤ –¥–µ–Ω—å
    scheduler.every().day.at("04:00").do(clean_old_backups)

    print(f"[{datetime.now()}] –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")

    try:
        while True:
            scheduler.run_pending()
            time.sleep(1)
    except Exception as e:
        error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {str(e)}"
        print(f"[{datetime.now()}] {error_msg}")
        bot.send_message(ADMIN_CHAT_ID, f"üî• {error_msg}")
        raise